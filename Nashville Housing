/*

Cleaning Data in SQL Queries

*/

--------------------------------------------------------------------------------------------------------------------------

-- Standardize Date Format

ALTER TABLE Nashville_Housing_Project
Add Sale_Date_Converted Date;

Update Nashville_Housing_Project
SET SaleDate = CONVERT(Date,SaleDate)

select * from Nashville_Housing_Project

 --------------------------------------------------------------------------------------------------------------------------

-- Populate Property Address data

                                                                    
                                                   -- I found a reference point in this dataset to populate nulll values in property address column, for every same 
SELECT                                             -- parcel id the address is same so al I have to do is that populate the null values with property address of same parcel id.
    a.ParcelID,
	a.PropertyAddress,
	b.ParcelID,
	b.PropertyAddress,
	ISNULL(a.PropertyAddress, b.PropertyAddress)  -- Populating property addresss column 
FROM
   Nashville_Housing_Project a JOIN
   Nashville_Housing_Project b ON
   a.ParcelID = b.ParcelID AND
   a.[UniqueID ] <> b.[UniqueID ]
WHERE
   a.PropertyAddress IS NULL

-- Updating the table with new values.
UPDATE a  
SET a.PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress) 
FROM
   Nashville_Housing_Project a JOIN
   Nashville_Housing_Project b ON
   a.ParcelID = b.ParcelID AND
   a.[UniqueID ] <> b.[UniqueID ]
WHERE
   a.PropertyAddress IS NULL



--------------------------------------------------------------------------------------------------------------------------

-- Breaking out Address into Individual Columns (Address, City, State)

SELECT 
   PropertyAddress,
   SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress )-1) AS Address,
   SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress )+1, LEN(PropertyAddress)) AS City
FROM
   Nashville_Housing_Project

-- Adding Address and City column to the table.
Alter Table Nashville_Housing_Project
ADD Address VARCHAR(250)

ALTER TABLE Nashville_Housing_Project
ADD City VARCHAR(250)

-- Adding values to the empty columns.
UPDATE Nashville_Housing_Project
SET Address = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress )-1)


UPDATE Nashville_Housing_Project
SET City = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress )+1, LEN(PropertyAddress))

--- Doing the same for OwnerAddress column.

SELECT
   OwnerAddress,
   PARSENAME (REPLACE(OwnerAddress, ',', '.'),3),
   PARSENAME (REPLACE(OwnerAddress, ',', '.'),2),
   PARSENAME (REPLACE(OwnerAddress, ',', '.'),1)
FROM 
   Nashville_Housing_Project

-- Now altering the table for these columns also.

ALTER TABLE Nashville_Housing_Project
ADD Owner_Address NVARCHAR(250)


ALTER TABLE Nashville_Housing_Project
ADD Owner_City NVARCHAR(250)


ALTER TABLE Nashville_Housing_Project
ADD Owner_State NVARCHAR(250)

-- Updating thhe 3 columns.

UPDATE Nashville_Housing_Project
SET Owner_Address = PARSENAME (REPLACE(OwnerAddress, ',', '.'),3)


UPDATE Nashville_Housing_Project
SET Owner_City = PARSENAME (REPLACE(OwnerAddress, ',', '.'),2)


UPDATE Nashville_Housing_Project
SET Owner_State = PARSENAME (REPLACE(OwnerAddress, ',', '.'),1)



--------------------------------------------------------------------------------------------------------------------------


-- Change Y and N to Yes and No in "Sold as Vacant" field.


SELECT
   CASE
   WHEN SoldAsVacant = 'Y' THEN 'Yes'
   WHEN SoldAsVacant = 'N' THEN 'No'
   ELSE SoldAsVacant END
FROM 
   Nashville_Housing_Project


UPDATE Nashville_Housing_Project
SET SoldAsVacant = CASE
   WHEN SoldAsVacant = 'Y' THEN 'Yes'
   WHEN SoldAsVacant = 'N' THEN 'No'
   ELSE SoldAsVacant END
FROM 
   Nashville_Housing_Project



SELECT SoldAsVacant 
FROM Nashville_Housing_Project



-----------------------------------------------------------------------------------------------------------------------------------------------------------

-- Remove Duplicates

SELECT                -- Checking for duplicate rows.

      [ParcelID]
      ,[LandUse]
      ,[PropertyAddress]
      ,[SaleDate]
      ,[SalePrice]
      ,[LegalReference]
      ,[SoldAsVacant]
      ,[OwnerName]
      ,[OwnerAddress]
      ,[Acreage]
      ,[TaxDistrict]
      ,[LandValue]
      ,[BuildingValue]
      ,[TotalValue]
      ,[YearBuilt]
      ,[Bedrooms]
      ,[FullBath]
      ,[HalfBath]
      ,[Sale_Date_Converted]
      ,[Address]
      ,[City]
      ,[Owner_Address]
      ,[Owner_City]
      ,[Owner_State]
	  ,max(UniqueID) AS duplicate_column
   
FROM 
   Nashville_Housing_Project
GROUP BY
   [ParcelID]
      ,[LandUse]
      ,[PropertyAddress]
      ,[SaleDate]
      ,[SalePrice]
      ,[LegalReference]
      ,[SoldAsVacant]
      ,[OwnerName]
      ,[OwnerAddress]
      ,[Acreage]
      ,[TaxDistrict]
      ,[LandValue]
      ,[BuildingValue]
      ,[TotalValue]
      ,[YearBuilt]
      ,[Bedrooms]
      ,[FullBath]
      ,[HalfBath]
      ,[Sale_Date_Converted]
      ,[Address]
      ,[City]
      ,[Owner_Address]
      ,[Owner_City]
      ,[Owner_State]

HAVING COUNT(*) > 1




-- Removing Duplicates


DELETE FROM Nashville_Housing_Project 
WHERE UniqueId in
(
SELECT
    max(UniqueID) AS duplicate_column
FROM 
   Nashville_Housing_Project
GROUP BY
   [ParcelID]
      ,[LandUse]
      ,[PropertyAddress]
      ,[SaleDate]
      ,[SalePrice]
      ,[LegalReference]
      ,[SoldAsVacant]
      ,[OwnerName]
      ,[OwnerAddress]
      ,[Acreage]
      ,[TaxDistrict]
      ,[LandValue]
      ,[BuildingValue]
      ,[TotalValue]
      ,[YearBuilt]
      ,[Bedrooms]
      ,[FullBath]
      ,[HalfBath]
      ,[Sale_Date_Converted]
      ,[Address]
      ,[City]
      ,[Owner_Address]
      ,[Owner_City]
      ,[Owner_State]

HAVING COUNT(*) > 1

)



---------------------------------------------------------------------------------------------------------

-- Delete Unused Columns





ALTER TABLE Nashville_Housing_Project
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate


-------------------------------------------------------------------------------------------------------




-- Now have a look a the clean data.

SELECT 
   *
FROM
   Nashville_Housing_Project
